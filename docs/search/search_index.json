{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to idemeum documentation Welcome to our idemeum documentation portal. Here you can find all information about how to use idemeum and integrate it with your identity infrastructure. \ud83d\udcdaWhat is idemeum? idemeum is a decentralized, verified, mobile identity platform. It is decentralized because we do not store any of the users' information on our backend, All user claims are safely and secure stored on a mobile device. It is verified , because idemeum has identity verification built in. Every single claim is verified in order to reduce identity fraud. And it is mobile because it replaces passwords by turning your phone into FIDo based authenticator. \ud83d\udcdbWhat does idemeum mean? We wanted the name of the product to reflect our mission and what we stand for. idemeum is comprised of two latin words: meum and idem that mean \"my\" and \"identity\". We aspire idemeum to be truly yours. Something that you can own, control, and share only with people and services you choose to. And we want idemeum to be your digital identity. Not some random string of characters that is hard to remember, but your true digital identity that you can use personally and professionally. idemeum for enterprise idemeum offers a variety of use cases for enterprises, including Verified Passwordless MFA . idemeum is very simple to deploy and POC, as there are no on-premises components or user sync requirements. As simple as connect idemeum cloud service with your identity infrastructure. Learn more","title":"Home"},{"location":"#welcome-to-idemeum-documentation","text":"Welcome to our idemeum documentation portal. Here you can find all information about how to use idemeum and integrate it with your identity infrastructure.","title":"Welcome to idemeum documentation"},{"location":"#what-is-idemeum","text":"idemeum is a decentralized, verified, mobile identity platform. It is decentralized because we do not store any of the users' information on our backend, All user claims are safely and secure stored on a mobile device. It is verified , because idemeum has identity verification built in. Every single claim is verified in order to reduce identity fraud. And it is mobile because it replaces passwords by turning your phone into FIDo based authenticator.","title":"\ud83d\udcdaWhat is idemeum?"},{"location":"#what-does-idemeum-mean","text":"We wanted the name of the product to reflect our mission and what we stand for. idemeum is comprised of two latin words: meum and idem that mean \"my\" and \"identity\". We aspire idemeum to be truly yours. Something that you can own, control, and share only with people and services you choose to. And we want idemeum to be your digital identity. Not some random string of characters that is hard to remember, but your true digital identity that you can use personally and professionally.","title":"\ud83d\udcdbWhat does idemeum mean?"},{"location":"#idemeum-for-enterprise","text":"idemeum offers a variety of use cases for enterprises, including Verified Passwordless MFA . idemeum is very simple to deploy and POC, as there are no on-premises components or user sync requirements. As simple as connect idemeum cloud service with your identity infrastructure. Learn more","title":"idemeum for enterprise"},{"location":"azuread/","text":"Integrate idemeum with Azure AD (B2B) How can idemeum help secure O365? idemeum integrates with Azure Active Directory (AAD) directly over SAML and provides the following services: Service Description Passwordless MFA Eliminate passwords when users access your SSO and O365 resources. No enrollment, no user sync, easy and simple. idemeum supports cloud-only as well as hybrid deployment models. How is O365 deployed? O365 and Azure Active Directory (AAD) can be implemented with various deployment models . Deployment model Definition Cloud only identity User account only exists in the Azure AD tenant for your Microsoft 365 subscription. Hybrid identity User account exists in AD DS and a copy is also in the Azure AD tenant for your Microsoft 365 subscription. The user account in Azure AD might also include a hashed version of the already hashed AD DS user account password. For authentication there are several options: password hash synchronization , pass-through authentication , and federation with ADFS . How is idemeum integrated with O365? idemeum can be federated directly with AAD using SAML protocol. When federating directly with Azure AD, idemeum can support cloud only as well as hybrid (password sync and pass-through) models. Intergate idemeum with Azure AD We are going to go through simple three steps to integrate idemeum with your Microsoft identity environment. Request idemeum tenant Configure Azure AD for federation Test user sign-in All additional Microsoft documentation and useful links can be found in footnotes . \u2699\ufe0f 1. Request idemeum tenant As a first step, reach out to idemeum team at support@idemeum.com with the request to provision idemeum tenant. We will need two things from you: Preferred tenant name - we will provision a tenant name for you based on you preferences. The tenant name will be in the form of: Tenant name <your company>.idemeum.com Company logo - share your company logo with us so that we can display it on every login page request as well as in the application, when users log into your company resources. We will need the image in the png or jpeg format. As a result of tenant provisioning we will share the configuration details with you, so that you can later use them in your Azure AD configuration: $LogOnUrl - SAML LogOn URL. $LogOffUrl - SAML LogOff URL. $SigningCert - signing certificate to establish federation trust. $IssuerUri - URI to identify idemeum in SAML responses. \ud83e\uddd1\ud83c\udfff\u200d\ud83e\udd1d\u200d\ud83e\uddd1\ud83c\udffc 2. Configure Azure AD for federation After signing up for Office 365, the only domain associated with your account is the onmicrosoft.com subdomain chosen during registration (for example, contoso.onmicrosoft.com ). To allow users to SSO to Azure AD and Office 365, it is recommended to have another domain added to the environment. If you already have such domain added and verified, you can always use that. Make sure you have admin account with another domain Once you configure Azure AD domain to be federated, you will no longer be able to use local login into accounts associated with that domain. Therefore, if something is wrong with the configuration, you might lock yourself out. To prevent that, make sure you have admin account created on other domain (for instance on your onmicrosoft.com domain), so that you can always use that account to log in and revert federation configuration. We will be using PowerShell to configure the Azure AD domain for federation 1 . Launch PowerShell on a Windows machine Install MSOnline PowerShell module if you have not already 1 Install-Module MSOnline Connect to MSOnline service. You will need to authenticate with your Azure AD Portal admin credentials 1 Connect-MsolService You can check your existing domains and their federation settings 1 Get-MsolDomain Check your current domain federation settings. If the current setting is federated , you will need to first convert domain to `managed' setting 1 Get-MsolDomainFederationSettings 1 Set-MsolDomainAuthentication -DomainName < yourdomain > -Authentication managed Now you can configure your domain with federation settings. Take a look at the example below. $Domain - the domain that you are planning to federate with idemeum $BrandName - the name that you will use for federation $LogOnUrl - this is a SAML LogOn URL. We will share this URL with you as part of onboarding. $LogOffUrl - this is a SAML LogOff URL. We will share this URL with you as part of onboarding $SigningCert - signing certificate to establish federation trust. We will share this certificate with you as part of onboarding. $IssuerUri - URI that identifies idemeum as SAML issuer. $Protocol - protocol to use for federation. In our case it is SAML 1 2 3 4 5 6 7 8 9 $Domain = \"idemeumlab.com\" $BrandName = \"idemeum\" $LogOnUrl = \"https://myhospital.idemeum.com/api/saml/sso\" $LogOffUrl = \"https://myhospital.idemeum.com/api/saml/slo\" $SigningCert = \"MIIC9DCCAdygAwIBAgIIPKj+xeu3fLQwDQYJKoZIhvcNAQELBQAwOjEMMAoGA1UEBhMDVVNBMRIwEAYDVQQHEwlQYWxvIEFsdG8xFjAUBgNVBAMMDSouaWRlbWV1bS5jb20wHhcNMjAxMjI5MjMwMjUxWhcNMzAxMjI3MjMwMjUxWjA6MQwwCgYDVQQGEwNVU0ExEjAQBgNVBAcTCVBhbG8gQWx0bzEWMBQGA1UEAwwNKi5pZGVtZXVtLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAMIVX288afPVD2Xhr+Zmc0BCbCVZumwYOFAjp659jytT8kpBuGXdu7A6CYE7CxVc4NeiwaDmteNp3x1INDBS+TSfHkWCNh+6sUhY4jyZVajuGJOCna4+NB2GLx4hl9+AzjfzKQBTT7CNoDLfGvE8ZtUdItCYrBIG8q37Z/2D3zLS90bmomQEGTzy45ckZ1+Q0nyHEikj3hrqUVotTr0ivylmRLj0Qnup3Eh0s8l5Lvb9VYauhL4KyqVqFnYv57Qg22+d6ZOCn6at6AiZbG8wlF5d/uppu6l3rigSKOFewK9rVwhGxTbgP2JZeCdXuDs5+d6b6zS0dfSQpgzyEy/Jmw0CAwEAATANBgkqhkiG9w0BAQsFAAOCAQEAWVG0ufqrF9oBYCBzm68i2di2IuEMhF2gW5ixcVgjfLLpnFrT0Lkt4taF+32ykNU9kram/SjSHF2+hJoBZ4BBQYIMXyA9TFn1bcn7LOq8uiDS/cF9noHlYrxOboq0qc38R4wkjSOEOFhs98zhRz2IPUccvwgfoiQZS3lt12Gb8KcZPaGKVnoxunpe7mQj69WkiKgBJLR2G4ODIX+FY01zwz7coplqYMOohTgOV/ej1BloWVWHFTkXKDtIgeuyQWGnJ3gBjDzmB5XwxvxA0NNCZVzhO23S0z/rn8eqKQ6obkabZUILurOeBC4wKEH314sbtOIP0NTI+Xc5LpbOwonhVQ==\" $IssuerUri = \"https://myhospital.idemeum.com/api/saml/metadata/idp.xml\" $Protocol = \"SAMLP\" Set-MsolDomainAuthentication -DomainName $Domain -FederationBrandName $BrandName -Authentication federated -PassiveLogOnUri $LogOnUrl -SigningCertificate $SigningCert -IssuerUri $IssuerUri -LogOffUri $LogOffUrl -PreferredAuthenticationProtocol $Protocol Verify that the settings are successfully configured for your domain. 1 Get-MsolDomainFederationSettings -DomainName < your domain here > | format-list * \ud83e\uddea 3. Test user sign in Once you are done with configuration you can quickly test the user sign-in flow. Open incognito browser window and navigate to portal.office.com Enter the email address of the account that you would like to sign into. Once you do that you will be redirected to idemeum for login. You will see the QR code that you will need to scan with the idemeum application. Once you scan the QR code with idemeum application and approve the sign in, you will be redirected to office 365. \ud83c\udf89 Congratulations! You have successfully integrated idemeum and protected your O365 deployment with passwordless authentication. Microsoft documentation - Configure SAML federation provider \u21a9 Azure AD SAML metadata \u21a9 MSOnline reference documentation \u21a9 Contact idemeum for any support questions \u21a9","title":"Azure AD (B2B)"},{"location":"azuread/#integrate-idemeum-with-azure-ad-b2b","text":"","title":" Integrate idemeum with Azure AD (B2B)"},{"location":"azuread/#how-can-idemeum-help-secure-o365","text":"idemeum integrates with Azure Active Directory (AAD) directly over SAML and provides the following services: Service Description Passwordless MFA Eliminate passwords when users access your SSO and O365 resources. No enrollment, no user sync, easy and simple. idemeum supports cloud-only as well as hybrid deployment models.","title":"How can idemeum help secure O365?"},{"location":"azuread/#how-is-o365-deployed","text":"O365 and Azure Active Directory (AAD) can be implemented with various deployment models . Deployment model Definition Cloud only identity User account only exists in the Azure AD tenant for your Microsoft 365 subscription. Hybrid identity User account exists in AD DS and a copy is also in the Azure AD tenant for your Microsoft 365 subscription. The user account in Azure AD might also include a hashed version of the already hashed AD DS user account password. For authentication there are several options: password hash synchronization , pass-through authentication , and federation with ADFS .","title":"How is O365 deployed?"},{"location":"azuread/#how-is-idemeum-integrated-with-o365","text":"idemeum can be federated directly with AAD using SAML protocol. When federating directly with Azure AD, idemeum can support cloud only as well as hybrid (password sync and pass-through) models.","title":"How is idemeum integrated with O365?"},{"location":"azuread/#intergate-idemeum-with-azure-ad","text":"We are going to go through simple three steps to integrate idemeum with your Microsoft identity environment. Request idemeum tenant Configure Azure AD for federation Test user sign-in All additional Microsoft documentation and useful links can be found in footnotes .","title":"Intergate idemeum with Azure AD"},{"location":"azuread/#1-request-idemeum-tenant","text":"As a first step, reach out to idemeum team at support@idemeum.com with the request to provision idemeum tenant. We will need two things from you: Preferred tenant name - we will provision a tenant name for you based on you preferences. The tenant name will be in the form of: Tenant name <your company>.idemeum.com Company logo - share your company logo with us so that we can display it on every login page request as well as in the application, when users log into your company resources. We will need the image in the png or jpeg format. As a result of tenant provisioning we will share the configuration details with you, so that you can later use them in your Azure AD configuration: $LogOnUrl - SAML LogOn URL. $LogOffUrl - SAML LogOff URL. $SigningCert - signing certificate to establish federation trust. $IssuerUri - URI to identify idemeum in SAML responses.","title":"\u2699\ufe0f 1. Request idemeum tenant"},{"location":"azuread/#2-configure-azure-ad-for-federation","text":"After signing up for Office 365, the only domain associated with your account is the onmicrosoft.com subdomain chosen during registration (for example, contoso.onmicrosoft.com ). To allow users to SSO to Azure AD and Office 365, it is recommended to have another domain added to the environment. If you already have such domain added and verified, you can always use that. Make sure you have admin account with another domain Once you configure Azure AD domain to be federated, you will no longer be able to use local login into accounts associated with that domain. Therefore, if something is wrong with the configuration, you might lock yourself out. To prevent that, make sure you have admin account created on other domain (for instance on your onmicrosoft.com domain), so that you can always use that account to log in and revert federation configuration. We will be using PowerShell to configure the Azure AD domain for federation 1 . Launch PowerShell on a Windows machine Install MSOnline PowerShell module if you have not already 1 Install-Module MSOnline Connect to MSOnline service. You will need to authenticate with your Azure AD Portal admin credentials 1 Connect-MsolService You can check your existing domains and their federation settings 1 Get-MsolDomain Check your current domain federation settings. If the current setting is federated , you will need to first convert domain to `managed' setting 1 Get-MsolDomainFederationSettings 1 Set-MsolDomainAuthentication -DomainName < yourdomain > -Authentication managed Now you can configure your domain with federation settings. Take a look at the example below. $Domain - the domain that you are planning to federate with idemeum $BrandName - the name that you will use for federation $LogOnUrl - this is a SAML LogOn URL. We will share this URL with you as part of onboarding. $LogOffUrl - this is a SAML LogOff URL. We will share this URL with you as part of onboarding $SigningCert - signing certificate to establish federation trust. We will share this certificate with you as part of onboarding. $IssuerUri - URI that identifies idemeum as SAML issuer. $Protocol - protocol to use for federation. In our case it is SAML 1 2 3 4 5 6 7 8 9 $Domain = \"idemeumlab.com\" $BrandName = \"idemeum\" $LogOnUrl = \"https://myhospital.idemeum.com/api/saml/sso\" $LogOffUrl = \"https://myhospital.idemeum.com/api/saml/slo\" $SigningCert = \"MIIC9DCCAdygAwIBAgIIPKj+xeu3fLQwDQYJKoZIhvcNAQELBQAwOjEMMAoGA1UEBhMDVVNBMRIwEAYDVQQHEwlQYWxvIEFsdG8xFjAUBgNVBAMMDSouaWRlbWV1bS5jb20wHhcNMjAxMjI5MjMwMjUxWhcNMzAxMjI3MjMwMjUxWjA6MQwwCgYDVQQGEwNVU0ExEjAQBgNVBAcTCVBhbG8gQWx0bzEWMBQGA1UEAwwNKi5pZGVtZXVtLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAMIVX288afPVD2Xhr+Zmc0BCbCVZumwYOFAjp659jytT8kpBuGXdu7A6CYE7CxVc4NeiwaDmteNp3x1INDBS+TSfHkWCNh+6sUhY4jyZVajuGJOCna4+NB2GLx4hl9+AzjfzKQBTT7CNoDLfGvE8ZtUdItCYrBIG8q37Z/2D3zLS90bmomQEGTzy45ckZ1+Q0nyHEikj3hrqUVotTr0ivylmRLj0Qnup3Eh0s8l5Lvb9VYauhL4KyqVqFnYv57Qg22+d6ZOCn6at6AiZbG8wlF5d/uppu6l3rigSKOFewK9rVwhGxTbgP2JZeCdXuDs5+d6b6zS0dfSQpgzyEy/Jmw0CAwEAATANBgkqhkiG9w0BAQsFAAOCAQEAWVG0ufqrF9oBYCBzm68i2di2IuEMhF2gW5ixcVgjfLLpnFrT0Lkt4taF+32ykNU9kram/SjSHF2+hJoBZ4BBQYIMXyA9TFn1bcn7LOq8uiDS/cF9noHlYrxOboq0qc38R4wkjSOEOFhs98zhRz2IPUccvwgfoiQZS3lt12Gb8KcZPaGKVnoxunpe7mQj69WkiKgBJLR2G4ODIX+FY01zwz7coplqYMOohTgOV/ej1BloWVWHFTkXKDtIgeuyQWGnJ3gBjDzmB5XwxvxA0NNCZVzhO23S0z/rn8eqKQ6obkabZUILurOeBC4wKEH314sbtOIP0NTI+Xc5LpbOwonhVQ==\" $IssuerUri = \"https://myhospital.idemeum.com/api/saml/metadata/idp.xml\" $Protocol = \"SAMLP\" Set-MsolDomainAuthentication -DomainName $Domain -FederationBrandName $BrandName -Authentication federated -PassiveLogOnUri $LogOnUrl -SigningCertificate $SigningCert -IssuerUri $IssuerUri -LogOffUri $LogOffUrl -PreferredAuthenticationProtocol $Protocol Verify that the settings are successfully configured for your domain. 1 Get-MsolDomainFederationSettings -DomainName < your domain here > | format-list *","title":"\ud83e\uddd1\ud83c\udfff\u200d\ud83e\udd1d\u200d\ud83e\uddd1\ud83c\udffc 2. Configure Azure AD for federation"},{"location":"azuread/#3-test-user-sign-in","text":"Once you are done with configuration you can quickly test the user sign-in flow. Open incognito browser window and navigate to portal.office.com Enter the email address of the account that you would like to sign into. Once you do that you will be redirected to idemeum for login. You will see the QR code that you will need to scan with the idemeum application. Once you scan the QR code with idemeum application and approve the sign in, you will be redirected to office 365. \ud83c\udf89 Congratulations! You have successfully integrated idemeum and protected your O365 deployment with passwordless authentication. Microsoft documentation - Configure SAML federation provider \u21a9 Azure AD SAML metadata \u21a9 MSOnline reference documentation \u21a9 Contact idemeum for any support questions \u21a9","title":"\ud83e\uddea 3. Test user sign in"},{"location":"enterprise-overview/","text":"Enterprise idemeum idemeum is very easy to integrate with various IT and identity infrastructure systems. idemeum leverages standard authentication protocols such as OpenID Connect , SAML , and FIDO / FIDO2 to deliver passwordless authentication and onboarding experience for your employees. Don\u2019t see what you\u2019re looking for? \ud83d\udc81\ud83c\udffb Contact our team, and we will be happy to help integrate idemeum with what you need.","title":"Overview"},{"location":"enterprise-overview/#enterprise-idemeum","text":"idemeum is very easy to integrate with various IT and identity infrastructure systems. idemeum leverages standard authentication protocols such as OpenID Connect , SAML , and FIDO / FIDO2 to deliver passwordless authentication and onboarding experience for your employees. Don\u2019t see what you\u2019re looking for? \ud83d\udc81\ud83c\udffb Contact our team, and we will be happy to help integrate idemeum with what you need.","title":"Enterprise idemeum"},{"location":"okta/","text":"Welcome to idemeum documentation We are currently working on our product launch, therefore the documentation will be launched soon. Stay tuned.","title":"Okta"},{"location":"okta/#welcome-to-idemeum-documentation","text":"We are currently working on our product launch, therefore the documentation will be launched soon. Stay tuned.","title":"Welcome to idemeum documentation"}]}